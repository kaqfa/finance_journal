# Generated by Django 5.2 on 2025-06-01 02:58

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('invest', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('planned_entry', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('planned_target', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('planned_stop_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('planned_quantity', models.DecimalField(blank=True, decimal_places=8, max_digits=18, null=True)),
                ('planned_risk_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('side', models.CharField(choices=[('long', 'Long'), ('short', 'Short')], max_length=10)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('open', 'Open'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('total_quantity', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('average_entry_price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('average_exit_price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_fees', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('realized_pnl', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('pnl_percentage', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('holding_time', models.DurationField(blank=True, null=True)),
                ('market_condition', models.CharField(blank=True, choices=[('trending', 'Trending'), ('ranging', 'Ranging'), ('volatile', 'Volatile'), ('news_driven', 'News Driven')], max_length=20)),
                ('emotional_state', models.CharField(blank=True, choices=[('confident', 'Confident'), ('fearful', 'Fearful'), ('greedy', 'Greedy'), ('neutral', 'Neutral'), ('fomo', 'FOMO'), ('revenge', 'Revenge Trading')], max_length=20)),
                ('setup_quality', models.CharField(blank=True, choices=[('A', 'Excellent'), ('B', 'Good'), ('C', 'Average'), ('D', 'Poor')], max_length=1)),
                ('execution_quality', models.CharField(blank=True, choices=[('perfect', 'Perfect'), ('good', 'Good'), ('average', 'Average'), ('poor', 'Poor')], max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('screenshot_urls', models.TextField(blank=True, default='[]')),
                ('planned_at', models.DateTimeField(blank=True, null=True)),
                ('entered_at', models.DateTimeField(blank=True, null=True)),
                ('exited_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='invest.asset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trades',
            },
        ),
        migrations.CreateModel(
            name='TradeExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('execution_type', models.CharField(choices=[('entry', 'Entry'), ('exit', 'Exit'), ('partial_exit', 'Partial Exit')], max_length=15)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=18)),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('fees', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('executed_at', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('trade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='trading.trade')),
            ],
            options={
                'db_table': 'trade_executions',
            },
        ),
        migrations.CreateModel(
            name='TradingAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account_name', models.CharField(max_length=255)),
                ('broker', models.CharField(max_length=100)),
                ('account_type', models.CharField(choices=[('stock', 'Stock Trading'), ('crypto', 'Cryptocurrency'), ('forex', 'Forex'), ('futures', 'Futures')], max_length=20)),
                ('initial_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('current_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('available_margin', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('max_daily_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('max_position_size', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trading_accounts',
            },
        ),
        migrations.AddField(
            model_name='trade',
            name='trading_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='trading.tradingaccount'),
        ),
        migrations.CreateModel(
            name='TradingStrategy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('rules', models.TextField(blank=True)),
                ('risk_reward_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('win_rate_target', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('timeframe', models.CharField(blank=True, max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_strategies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trading_strategies',
            },
        ),
        migrations.AddField(
            model_name='trade',
            name='strategy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='trading.tradingstrategy'),
        ),
        migrations.CreateModel(
            name='TradingPerformance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('starting_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('ending_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('daily_pnl', models.DecimalField(decimal_places=2, max_digits=15)),
                ('daily_pnl_percentage', models.DecimalField(decimal_places=4, max_digits=8)),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('losing_trades', models.IntegerField(default=0)),
                ('win_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('max_drawdown', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('max_risk_per_trade', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('trading_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='trading.tradingaccount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_performances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trading_performance',
                'indexes': [models.Index(fields=['user', 'trading_account', 'date'], name='trading_per_user_id_43f7e2_idx')],
                'unique_together': {('user', 'trading_account', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['user', 'status'], name='trades_user_id_775926_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['user', 'entered_at'], name='trades_user_id_3186b5_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['trading_account', 'status'], name='trades_trading_c5689d_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['strategy', 'status'], name='trades_strateg_3b3e19_idx'),
        ),
    ]
